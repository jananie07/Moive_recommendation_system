# -*- coding: utf-8 -*-
"""Moive recommendation .ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1ZNJgPf4PKjrlk5Q3kt1aFfEQP1qan_wN

IMPORT LIBRARIES
"""

import numpy as np
import pandas as pd
import difflib #get the close match
from sklearn.feature_extraction.text import TfidfVectorizer #text to numerical
from sklearn.metrics.pairwise import cosine_similarity

"""data collection and preprocessing"""

moives_data =  pd.read_csv('/content/movies.csv')

moives_data.head()

moives_data.shape

selected_features = ['genres','keywords','tagline','cast','director']
print(selected_features)

#replace null values
for feature in selected_features:
  moives_data[feature] = moives_data[feature].fillna('')

#combining all
combined_features = moives_data['genres']+' '+moives_data['keywords']+' '+moives_data['tagline']+' '+moives_data['cast']+' '+moives_data['director']

print(combined_features)

#text data to feature vectors
vectorize = TfidfVectorizer()

feature_vectors = vectorize.fit_transform(combined_features)

print(feature_vectors)

"""Input from user


"""

#getting moive name from user
moive_name =input("enter your fav moive:")

#moive name column 
list_0f_titles = moives_data['title'].tolist()
print(list_0f_titles)

#close match
close_match = difflib.get_close_matches(moive_name,list_0f_titles)
print(close_match)

closet_match = close_match[0]
print(closet_match)

#finding the index of moive
index_of_the_moive = moives_data[moives_data.title == closet_match]['index'].values[0]
print(index_of_the_moive)

#similarity
similarity = cosine_similarity(feature_vectors)

print(similarity)

print(similarity.shape)

#list of similar moive
similarity_score = list (enumerate(similarity[index_of_the_moive]))
print (similarity_score

#sorting 
sorted_similar_moives = sorted(similarity_score,key = lambda x:x[1],reverse=True)
print(sorted_similar_moives)

#names of the similar moives
print("Recommended moives for you")
i = 1

for moive in sorted_similar_moives:
  index = moive[0]
  title_from_index = moives_data[moives_data.index==index]['title'].values[0]
  if (i<25):
    print (i,'.',title_from_index)
    i+=1

"""Moive Recommendation System

"""

moive_name =input("enter your fav moive:")
list_0f_titles = moives_data['title'].tolist()
close_match = difflib.get_close_matches(moive_name,list_0f_titles)
closet_match = close_match[0]
index_of_the_moive = moives_data[moives_data.title == closet_match]['index'].values[0]
similarity_score = list (enumerate(similarity[index_of_the_moive]))
sorted_similar_moives = sorted(similarity_score,key = lambda x:x[1],reverse=True)

print("Recommended moives for you")
i = 1

for moive in sorted_similar_moives:
  index = moive[0]
  title_from_index = moives_data[moives_data.index==index]['title'].values[0]
  if (i<25):
    print (i,'.',title_from_index)
    i+=1